<?xml version="1.0" encoding="UTF-8"?>
<gmfgen:GenEditorGenerator
    xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:gmfgen="http://www.eclipse.org/gmf/2009/GenModel">
  <diagram
      visualID="1000"
      editPartClassName="ServiceBlueprintModelEditPart"
      itemSemanticEditPolicyClassName="ServiceBlueprintModelItemSemanticEditPolicy"
      canonicalEditPolicyClassName="ServiceBlueprintModelCanonicalEditPolicy"
      iconProviderPriority="Low"
      validationProviderPriority="Low">
    <diagramRunTimeClass
        href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Diagram"/>
    <elementType
        xsi:type="gmfgen:MetamodelType"
        editHelperClassName="ServiceBlueprintModelEditHelper"/>
    <viewmap
        xsi:type="gmfgen:FigureViewmap"
        figureQualifiedClassName="org.eclipse.draw2d.FreeformLayer"/>
    <domainDiagramElement
        href="serviceblueprint.genmodel#//serviceblueprint/ServiceBlueprintModel"/>
    <childNodes
        visualID="3001"
        editPartClassName="PhysicalEvidenceEditPart"
        itemSemanticEditPolicyClassName="PhysicalEvidenceItemSemanticEditPolicy"
        notationViewFactoryClassName="PhysicalEvidenceViewFactory"
        canonicalEditPolicyClassName="PhysicalEvidenceCanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="PhysicalEvidenceGraphicalNodeEditPolicy"
        createCommandClassName="PhysicalEvidenceCreateCommand"
        containers="//@diagram/@compartments.0">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="PhysicalEvidenceEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          layoutType="FLOW_LAYOUT"
          className="PhysicalEvidenceFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class PhysicalEvidenceFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigurePhysicalEvidenceContentFigure; &#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public PhysicalEvidenceFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.FlowLayout layoutThis = new org.eclipse.draw2d.FlowLayout();&#xA;&#x9;layoutThis.setStretchMinorAxis(false);&#xA;&#x9;layoutThis.setMinorAlignment(org.eclipse.draw2d.FlowLayout.ALIGN_LEFTTOP&#xA;);&#xA;&#xA;&#x9;layoutThis.setMajorAlignment(org.eclipse.draw2d.FlowLayout.ALIGN_LEFTTOP&#xA;);&#xA;&#x9;layoutThis.setMajorSpacing(5);&#xA;&#x9;layoutThis.setMinorSpacing(5);&#xA;&#x9;layoutThis.setHorizontal(true);&#xA;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setLineWidth(2);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;this.setBackgroundColor(org.eclipse.draw2d.ColorConstants.white);&#xA;this.setMinimumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(100)&#xA;, getMapMode().DPtoLP(60)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigurePhysicalEvidenceContentFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigurePhysicalEvidenceContentFigure.setText(&quot;Define the action&quot;);&#xA;&#xA;this.add(fFigurePhysicalEvidenceContentFigure);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigurePhysicalEvidenceContentFigure() {&#xA;&#x9;&#x9;return fFigurePhysicalEvidenceContentFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"
            fixedBackground="true"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="serviceblueprint.genmodel#//serviceblueprint/PhysicalEvidence"/>
        <containmentMetaFeature
            href="serviceblueprint.genmodel#//serviceblueprint/ServiceBlueprintDiagram/hasPhysicalEvidences"/>
        <childMetaFeature
            href="serviceblueprint.genmodel#//serviceblueprint/ServiceBlueprintDiagram/hasPhysicalEvidences"/>
      </modelFacet>
    </childNodes>
    <childNodes
        visualID="3002"
        editPartClassName="CustomerActionEditPart"
        itemSemanticEditPolicyClassName="CustomerActionItemSemanticEditPolicy"
        notationViewFactoryClassName="CustomerActionViewFactory"
        canonicalEditPolicyClassName="CustomerActionCanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="CustomerActionGraphicalNodeEditPolicy"
        createCommandClassName="CustomerActionCreateCommand"
        containers="//@diagram/@compartments.1">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="CustomerActionEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          layoutType="FLOW_LAYOUT"
          className="CustomerActionFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class CustomerActionFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureCustomerActionContentFigure; &#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public CustomerActionFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.FlowLayout layoutThis = new org.eclipse.draw2d.FlowLayout();&#xA;&#x9;layoutThis.setStretchMinorAxis(false);&#xA;&#x9;layoutThis.setMinorAlignment(org.eclipse.draw2d.FlowLayout.ALIGN_LEFTTOP&#xA;);&#xA;&#xA;&#x9;layoutThis.setMajorAlignment(org.eclipse.draw2d.FlowLayout.ALIGN_LEFTTOP&#xA;);&#xA;&#x9;layoutThis.setMajorSpacing(5);&#xA;&#x9;layoutThis.setMinorSpacing(5);&#xA;&#x9;layoutThis.setHorizontal(true);&#xA;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setLineWidth(2);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;this.setBackgroundColor(org.eclipse.draw2d.ColorConstants.white);&#xA;this.setMinimumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(100)&#xA;, getMapMode().DPtoLP(60)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureCustomerActionContentFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureCustomerActionContentFigure.setText(&quot;Define the action&quot;);&#xA;&#xA;this.add(fFigureCustomerActionContentFigure);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureCustomerActionContentFigure() {&#xA;&#x9;&#x9;return fFigureCustomerActionContentFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"
            fixedBackground="true"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="serviceblueprint.genmodel#//serviceblueprint/CustomerAction"/>
        <containmentMetaFeature
            href="serviceblueprint.genmodel#//serviceblueprint/ServiceBlueprintDiagram/hasCustomerActions"/>
        <childMetaFeature
            href="serviceblueprint.genmodel#//serviceblueprint/ServiceBlueprintDiagram/hasCustomerActions"/>
      </modelFacet>
    </childNodes>
    <childNodes
        visualID="3003"
        editPartClassName="OnStageEmployeeActionEditPart"
        itemSemanticEditPolicyClassName="OnStageEmployeeActionItemSemanticEditPolicy"
        notationViewFactoryClassName="OnStageEmployeeActionViewFactory"
        canonicalEditPolicyClassName="OnStageEmployeeActionCanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="OnStageEmployeeActionGraphicalNodeEditPolicy"
        createCommandClassName="OnStageEmployeeActionCreateCommand"
        containers="//@diagram/@compartments.2">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="OnStageEmployeeActionEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          layoutType="FLOW_LAYOUT"
          className="OnStageEmployeeActionFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class OnStageEmployeeActionFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureOnStageEmployeeActionContentFigure; &#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public OnStageEmployeeActionFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.FlowLayout layoutThis = new org.eclipse.draw2d.FlowLayout();&#xA;&#x9;layoutThis.setStretchMinorAxis(false);&#xA;&#x9;layoutThis.setMinorAlignment(org.eclipse.draw2d.FlowLayout.ALIGN_LEFTTOP&#xA;);&#xA;&#xA;&#x9;layoutThis.setMajorAlignment(org.eclipse.draw2d.FlowLayout.ALIGN_LEFTTOP&#xA;);&#xA;&#x9;layoutThis.setMajorSpacing(5);&#xA;&#x9;layoutThis.setMinorSpacing(5);&#xA;&#x9;layoutThis.setHorizontal(true);&#xA;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setLineWidth(2);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;this.setBackgroundColor(org.eclipse.draw2d.ColorConstants.white);&#xA;this.setMinimumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(100)&#xA;, getMapMode().DPtoLP(60)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureOnStageEmployeeActionContentFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureOnStageEmployeeActionContentFigure.setText(&quot;Define the action&quot;);&#xA;&#xA;this.add(fFigureOnStageEmployeeActionContentFigure);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureOnStageEmployeeActionContentFigure() {&#xA;&#x9;&#x9;return fFigureOnStageEmployeeActionContentFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"
            fixedBackground="true"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="serviceblueprint.genmodel#//serviceblueprint/OnStageEmployeeAction"/>
        <containmentMetaFeature
            href="serviceblueprint.genmodel#//serviceblueprint/ServiceBlueprintDiagram/hasOnStageEmployeeActions"/>
        <childMetaFeature
            href="serviceblueprint.genmodel#//serviceblueprint/ServiceBlueprintDiagram/hasOnStageEmployeeActions"/>
      </modelFacet>
    </childNodes>
    <childNodes
        visualID="3004"
        editPartClassName="BackStageEmployeeActionEditPart"
        itemSemanticEditPolicyClassName="BackStageEmployeeActionItemSemanticEditPolicy"
        notationViewFactoryClassName="BackStageEmployeeActionViewFactory"
        canonicalEditPolicyClassName="BackStageEmployeeActionCanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="BackStageEmployeeActionGraphicalNodeEditPolicy"
        createCommandClassName="BackStageEmployeeActionCreateCommand"
        containers="//@diagram/@compartments.3">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="BackStageEmployeeActionEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          layoutType="FLOW_LAYOUT"
          className="BackStageEmployeeActionFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class BackStageEmployeeActionFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureBackStageEmployeeActionContentFigure; &#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public BackStageEmployeeActionFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.FlowLayout layoutThis = new org.eclipse.draw2d.FlowLayout();&#xA;&#x9;layoutThis.setStretchMinorAxis(false);&#xA;&#x9;layoutThis.setMinorAlignment(org.eclipse.draw2d.FlowLayout.ALIGN_LEFTTOP&#xA;);&#xA;&#xA;&#x9;layoutThis.setMajorAlignment(org.eclipse.draw2d.FlowLayout.ALIGN_LEFTTOP&#xA;);&#xA;&#x9;layoutThis.setMajorSpacing(5);&#xA;&#x9;layoutThis.setMinorSpacing(5);&#xA;&#x9;layoutThis.setHorizontal(true);&#xA;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setLineWidth(2);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;this.setBackgroundColor(org.eclipse.draw2d.ColorConstants.white);&#xA;this.setMinimumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(100)&#xA;, getMapMode().DPtoLP(60)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureBackStageEmployeeActionContentFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureBackStageEmployeeActionContentFigure.setText(&quot;Define the action&quot;);&#xA;&#xA;this.add(fFigureBackStageEmployeeActionContentFigure);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureBackStageEmployeeActionContentFigure() {&#xA;&#x9;&#x9;return fFigureBackStageEmployeeActionContentFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"
            fixedBackground="true"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="serviceblueprint.genmodel#//serviceblueprint/BackStageEmployeeAction"/>
        <containmentMetaFeature
            href="serviceblueprint.genmodel#//serviceblueprint/ServiceBlueprintDiagram/hasBackStageEmployeeActions"/>
        <childMetaFeature
            href="serviceblueprint.genmodel#//serviceblueprint/ServiceBlueprintDiagram/hasBackStageEmployeeActions"/>
      </modelFacet>
    </childNodes>
    <childNodes
        visualID="3005"
        editPartClassName="SupportProcessEditPart"
        itemSemanticEditPolicyClassName="SupportProcessItemSemanticEditPolicy"
        notationViewFactoryClassName="SupportProcessViewFactory"
        canonicalEditPolicyClassName="SupportProcessCanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="SupportProcessGraphicalNodeEditPolicy"
        createCommandClassName="SupportProcessCreateCommand"
        containers="//@diagram/@compartments.4">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="SupportProcessEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          layoutType="FLOW_LAYOUT"
          className="SupportProcessFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class SupportProcessFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureSupportProcessContentFigure; &#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public SupportProcessFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.FlowLayout layoutThis = new org.eclipse.draw2d.FlowLayout();&#xA;&#x9;layoutThis.setStretchMinorAxis(false);&#xA;&#x9;layoutThis.setMinorAlignment(org.eclipse.draw2d.FlowLayout.ALIGN_LEFTTOP&#xA;);&#xA;&#xA;&#x9;layoutThis.setMajorAlignment(org.eclipse.draw2d.FlowLayout.ALIGN_LEFTTOP&#xA;);&#xA;&#x9;layoutThis.setMajorSpacing(5);&#xA;&#x9;layoutThis.setMinorSpacing(5);&#xA;&#x9;layoutThis.setHorizontal(true);&#xA;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;this.setBackgroundColor(org.eclipse.draw2d.ColorConstants.white);&#xA;this.setMinimumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(100)&#xA;, getMapMode().DPtoLP(60)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureSupportProcessContentFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;fFigureSupportProcessContentFigure.setText(&quot;Define the action&quot;);&#xA;&#xA;this.add(fFigureSupportProcessContentFigure);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureSupportProcessContentFigure() {&#xA;&#x9;&#x9;return fFigureSupportProcessContentFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"
            fixedBackground="true"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="serviceblueprint.genmodel#//serviceblueprint/SupportProcess"/>
        <containmentMetaFeature
            href="serviceblueprint.genmodel#//serviceblueprint/ServiceBlueprintDiagram/hasSupportProcesses"/>
        <childMetaFeature
            href="serviceblueprint.genmodel#//serviceblueprint/ServiceBlueprintDiagram/hasSupportProcesses"/>
      </modelFacet>
    </childNodes>
    <topLevelNodes
        visualID="2001"
        editPartClassName="ServiceBlueprintDiagramEditPart"
        itemSemanticEditPolicyClassName="ServiceBlueprintDiagramItemSemanticEditPolicy"
        notationViewFactoryClassName="ServiceBlueprintDiagramViewFactory"
        canonicalEditPolicyClassName="ServiceBlueprintDiagramCanonicalEditPolicy"
        compartments="//@diagram/@compartments.0 //@diagram/@compartments.1 //@diagram/@compartments.2 //@diagram/@compartments.3 //@diagram/@compartments.4"
        graphicalNodeEditPolicyClassName="ServiceBlueprintDiagramGraphicalNodeEditPolicy"
        createCommandClassName="ServiceBlueprintDiagramCreateCommand">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="ServiceBlueprintDiagramEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          layoutType="XY_LAYOUT"
          className="ServiceBlueprintDiagramFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class ServiceBlueprintDiagramFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RectangleFigure fFigureCompartmentBaseLayoutRowPhysicalEvidence; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RectangleFigure fFigureCompartmentBaseLayoutRowCustomerAction; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RectangleFigure fFigureCompartmentBaseLayoutRowOnStageEmployeeAction; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RectangleFigure fFigureCompartmentBaseLayoutRowBackStageEmployeeAction; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RectangleFigure fFigureCompartmentBaseLayoutRowSupportProcess; &#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public ServiceBlueprintDiagramFigure() {&#xA;&#x9;&#x9;this.setLayoutManager(new org.eclipse.draw2d.XYLayout());&#xA;&#x9;&#x9;this.setLineWidth(2);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;this.setMinimumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(1000)&#xA;, getMapMode().DPtoLP(800)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure baseLayoutRowPhysicalEvidence0 = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;baseLayoutRowPhysicalEvidence0.setLineWidth(0);&#xA;&#x9;baseLayoutRowPhysicalEvidence0.setBackgroundColor(org.eclipse.draw2d.ColorConstants.white);&#xA;&#xA;this.add(baseLayoutRowPhysicalEvidence0, &#xA;new org.eclipse.draw2d.geometry.Rectangle(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(1000)&#xA;, getMapMode().DPtoLP(150)&#xA;)&#xA;);&#xA;baseLayoutRowPhysicalEvidence0.setLayoutManager(new org.eclipse.draw2d.XYLayout());&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure titleBaseLayoutRowPhysicalEvidence1 = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;titleBaseLayoutRowPhysicalEvidence1.setOutline(false);&#xA;titleBaseLayoutRowPhysicalEvidence1.setFill(false);&#xA;titleBaseLayoutRowPhysicalEvidence1.setOpaque(false);&#xA;&#xA;baseLayoutRowPhysicalEvidence0.add(titleBaseLayoutRowPhysicalEvidence1, &#xA;new org.eclipse.draw2d.geometry.Rectangle(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(100)&#xA;, getMapMode().DPtoLP(150)&#xA;)&#xA;);&#xA;titleBaseLayoutRowPhysicalEvidence1.setLayoutManager(new org.eclipse.draw2d.XYLayout());&#xA;&#xA;&#xA;org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel titlePhysicalEvidence2 = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;titlePhysicalEvidence2.setText(&quot;PHYSICAL\nEVIDENCE&quot;);&#xA;&#x9;titlePhysicalEvidence2.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;titlePhysicalEvidence2.setFont(TITLEPHYSICALEVIDENCE2_FONT);&#xA;&#xA;&#xA;&#xA;titleBaseLayoutRowPhysicalEvidence1.add(titlePhysicalEvidence2, &#xA;new org.eclipse.draw2d.geometry.Rectangle(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(60)&#xA;, getMapMode().DPtoLP(100)&#xA;, getMapMode().DPtoLP(150)&#xA;)&#xA;);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureCompartmentBaseLayoutRowPhysicalEvidence = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;fFigureCompartmentBaseLayoutRowPhysicalEvidence.setOutline(false);&#xA;fFigureCompartmentBaseLayoutRowPhysicalEvidence.setFill(false);&#xA;fFigureCompartmentBaseLayoutRowPhysicalEvidence.setOpaque(false);&#xA;&#xA;baseLayoutRowPhysicalEvidence0.add(fFigureCompartmentBaseLayoutRowPhysicalEvidence, &#xA;new org.eclipse.draw2d.geometry.Rectangle(getMapMode().DPtoLP(100)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(900)&#xA;, getMapMode().DPtoLP(150)&#xA;)&#xA;);&#xA;fFigureCompartmentBaseLayoutRowPhysicalEvidence.setLayoutManager(new org.eclipse.draw2d.StackLayout());&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure baseLayoutLineDivisorPhysicalEvidenceCustomerAction0 = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;baseLayoutLineDivisorPhysicalEvidenceCustomerAction0.setLineWidth(0);&#xA;&#xA;this.add(baseLayoutLineDivisorPhysicalEvidenceCustomerAction0, &#xA;new org.eclipse.draw2d.geometry.Rectangle(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(150)&#xA;, getMapMode().DPtoLP(1000)&#xA;, getMapMode().DPtoLP(4)&#xA;)&#xA;);&#xA;baseLayoutLineDivisorPhysicalEvidenceCustomerAction0.setLayoutManager(new org.eclipse.draw2d.XYLayout());&#xA;&#xA;&#xA;org.eclipse.draw2d.PolylineShape lineDivisor1 = new org.eclipse.draw2d.PolylineShape();&#xA;&#xA;lineDivisor1.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(2)&#xA;));&#xA;lineDivisor1.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(1000)&#xA;, getMapMode().DPtoLP(2)&#xA;));&#xA;&#x9;lineDivisor1.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;baseLayoutLineDivisorPhysicalEvidenceCustomerAction0.add(lineDivisor1, &#xA;new org.eclipse.draw2d.geometry.Rectangle(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(1000)&#xA;, getMapMode().DPtoLP(4)&#xA;)&#xA;);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure baseLayoutCustomerAction0 = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;baseLayoutCustomerAction0.setLineWidth(0);&#xA;&#x9;baseLayoutCustomerAction0.setBackgroundColor(org.eclipse.draw2d.ColorConstants.white);&#xA;&#xA;this.add(baseLayoutCustomerAction0, &#xA;new org.eclipse.draw2d.geometry.Rectangle(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(154)&#xA;, getMapMode().DPtoLP(1000)&#xA;, getMapMode().DPtoLP(150)&#xA;)&#xA;);&#xA;baseLayoutCustomerAction0.setLayoutManager(new org.eclipse.draw2d.XYLayout());&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure titleBaseLayoutRowCustomerAction1 = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;titleBaseLayoutRowCustomerAction1.setOutline(false);&#xA;titleBaseLayoutRowCustomerAction1.setFill(false);&#xA;titleBaseLayoutRowCustomerAction1.setOpaque(false);&#xA;&#xA;baseLayoutCustomerAction0.add(titleBaseLayoutRowCustomerAction1, &#xA;new org.eclipse.draw2d.geometry.Rectangle(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(100)&#xA;, getMapMode().DPtoLP(150)&#xA;)&#xA;);&#xA;titleBaseLayoutRowCustomerAction1.setLayoutManager(new org.eclipse.draw2d.XYLayout());&#xA;&#xA;&#xA;org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel titleCustomerAction2 = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;titleCustomerAction2.setText(&quot;CUSTOMER\nACTION&quot;);&#xA;&#x9;titleCustomerAction2.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;titleCustomerAction2.setFont(TITLECUSTOMERACTION2_FONT);&#xA;&#xA;&#xA;&#xA;titleBaseLayoutRowCustomerAction1.add(titleCustomerAction2, &#xA;new org.eclipse.draw2d.geometry.Rectangle(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(60)&#xA;, getMapMode().DPtoLP(100)&#xA;, getMapMode().DPtoLP(150)&#xA;)&#xA;);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureCompartmentBaseLayoutRowCustomerAction = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;fFigureCompartmentBaseLayoutRowCustomerAction.setOutline(false);&#xA;fFigureCompartmentBaseLayoutRowCustomerAction.setFill(false);&#xA;fFigureCompartmentBaseLayoutRowCustomerAction.setOpaque(false);&#xA;&#xA;baseLayoutCustomerAction0.add(fFigureCompartmentBaseLayoutRowCustomerAction, &#xA;new org.eclipse.draw2d.geometry.Rectangle(getMapMode().DPtoLP(100)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(900)&#xA;, getMapMode().DPtoLP(150)&#xA;)&#xA;);&#xA;fFigureCompartmentBaseLayoutRowCustomerAction.setLayoutManager(new org.eclipse.draw2d.StackLayout());&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure baseLayoutLineOfInteraction0 = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;baseLayoutLineOfInteraction0.setLineWidth(0);&#xA;&#xA;this.add(baseLayoutLineOfInteraction0, &#xA;new org.eclipse.draw2d.geometry.Rectangle(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(300)&#xA;, getMapMode().DPtoLP(1000)&#xA;, getMapMode().DPtoLP(20)&#xA;)&#xA;);&#xA;baseLayoutLineOfInteraction0.setLayoutManager(new org.eclipse.draw2d.XYLayout());&#xA;&#xA;&#xA;org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel titleLineOfInteraction1 = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;titleLineOfInteraction1.setText(&quot;LINE OF INTERACTION&quot;);&#xA;&#x9;titleLineOfInteraction1.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;baseLayoutLineOfInteraction0.add(titleLineOfInteraction1, &#xA;new org.eclipse.draw2d.geometry.Rectangle(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(130)&#xA;, getMapMode().DPtoLP(20)&#xA;)&#xA;);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.PolylineShape lineOfInteraction1 = new org.eclipse.draw2d.PolylineShape();&#xA;&#xA;lineOfInteraction1.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(9)&#xA;));&#xA;lineOfInteraction1.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(900)&#xA;, getMapMode().DPtoLP(9)&#xA;));&#xA;&#x9;lineOfInteraction1.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;baseLayoutLineOfInteraction0.add(lineOfInteraction1, &#xA;new org.eclipse.draw2d.geometry.Rectangle(getMapMode().DPtoLP(130)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(900)&#xA;, getMapMode().DPtoLP(20)&#xA;)&#xA;);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure baseLayoutOnStageEmployeeAction0 = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;baseLayoutOnStageEmployeeAction0.setLineWidth(0);&#xA;&#xA;this.add(baseLayoutOnStageEmployeeAction0, &#xA;new org.eclipse.draw2d.geometry.Rectangle(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(320)&#xA;, getMapMode().DPtoLP(1000)&#xA;, getMapMode().DPtoLP(150)&#xA;)&#xA;);&#xA;baseLayoutOnStageEmployeeAction0.setLayoutManager(new org.eclipse.draw2d.XYLayout());&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure titleBaseLayoutRowOnStageEmployeeAction1 = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;titleBaseLayoutRowOnStageEmployeeAction1.setOutline(false);&#xA;titleBaseLayoutRowOnStageEmployeeAction1.setFill(false);&#xA;titleBaseLayoutRowOnStageEmployeeAction1.setOpaque(false);&#xA;&#xA;baseLayoutOnStageEmployeeAction0.add(titleBaseLayoutRowOnStageEmployeeAction1, &#xA;new org.eclipse.draw2d.geometry.Rectangle(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(100)&#xA;, getMapMode().DPtoLP(150)&#xA;)&#xA;);&#xA;titleBaseLayoutRowOnStageEmployeeAction1.setLayoutManager(new org.eclipse.draw2d.XYLayout());&#xA;&#xA;&#xA;org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel titleOnStageEmployeeAction2 = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;titleOnStageEmployeeAction2.setText(&quot;ON STAGE\nEMPLOYEE ACTION&quot;);&#xA;&#x9;titleOnStageEmployeeAction2.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;titleOnStageEmployeeAction2.setFont(TITLEONSTAGEEMPLOYEEACTION2_FONT);&#xA;&#xA;&#xA;&#xA;titleBaseLayoutRowOnStageEmployeeAction1.add(titleOnStageEmployeeAction2, &#xA;new org.eclipse.draw2d.geometry.Rectangle(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(60)&#xA;, getMapMode().DPtoLP(100)&#xA;, getMapMode().DPtoLP(150)&#xA;)&#xA;);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureCompartmentBaseLayoutRowOnStageEmployeeAction = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;fFigureCompartmentBaseLayoutRowOnStageEmployeeAction.setOutline(false);&#xA;fFigureCompartmentBaseLayoutRowOnStageEmployeeAction.setFill(false);&#xA;fFigureCompartmentBaseLayoutRowOnStageEmployeeAction.setOpaque(false);&#xA;&#xA;baseLayoutOnStageEmployeeAction0.add(fFigureCompartmentBaseLayoutRowOnStageEmployeeAction, &#xA;new org.eclipse.draw2d.geometry.Rectangle(getMapMode().DPtoLP(100)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(900)&#xA;, getMapMode().DPtoLP(150)&#xA;)&#xA;);&#xA;fFigureCompartmentBaseLayoutRowOnStageEmployeeAction.setLayoutManager(new org.eclipse.draw2d.StackLayout());&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure baseLayoutLineOfVisibility0 = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;baseLayoutLineOfVisibility0.setLineWidth(0);&#xA;&#xA;this.add(baseLayoutLineOfVisibility0, &#xA;new org.eclipse.draw2d.geometry.Rectangle(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(470)&#xA;, getMapMode().DPtoLP(1000)&#xA;, getMapMode().DPtoLP(20)&#xA;)&#xA;);&#xA;baseLayoutLineOfVisibility0.setLayoutManager(new org.eclipse.draw2d.XYLayout());&#xA;&#xA;&#xA;org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel titleLineOfVisibility1 = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;titleLineOfVisibility1.setText(&quot;LINE OF VISIBILITY&quot;);&#xA;&#x9;titleLineOfVisibility1.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;baseLayoutLineOfVisibility0.add(titleLineOfVisibility1, &#xA;new org.eclipse.draw2d.geometry.Rectangle(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(120)&#xA;, getMapMode().DPtoLP(20)&#xA;)&#xA;);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.PolylineShape lineOfVisibility1 = new org.eclipse.draw2d.PolylineShape();&#xA;&#xA;lineOfVisibility1.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(9)&#xA;));&#xA;lineOfVisibility1.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(880)&#xA;, getMapMode().DPtoLP(9)&#xA;));&#xA;&#x9;lineOfVisibility1.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;baseLayoutLineOfVisibility0.add(lineOfVisibility1, &#xA;new org.eclipse.draw2d.geometry.Rectangle(getMapMode().DPtoLP(120)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(900)&#xA;, getMapMode().DPtoLP(20)&#xA;)&#xA;);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure baseLayoutBackStageEmployeeAction0 = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;baseLayoutBackStageEmployeeAction0.setLineWidth(0);&#xA;&#xA;this.add(baseLayoutBackStageEmployeeAction0, &#xA;new org.eclipse.draw2d.geometry.Rectangle(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(490)&#xA;, getMapMode().DPtoLP(1000)&#xA;, getMapMode().DPtoLP(150)&#xA;)&#xA;);&#xA;baseLayoutBackStageEmployeeAction0.setLayoutManager(new org.eclipse.draw2d.XYLayout());&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure titleBaseLayoutRowBackStageEmployeeAction1 = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;titleBaseLayoutRowBackStageEmployeeAction1.setOutline(false);&#xA;titleBaseLayoutRowBackStageEmployeeAction1.setFill(false);&#xA;titleBaseLayoutRowBackStageEmployeeAction1.setOpaque(false);&#xA;&#xA;baseLayoutBackStageEmployeeAction0.add(titleBaseLayoutRowBackStageEmployeeAction1, &#xA;new org.eclipse.draw2d.geometry.Rectangle(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(100)&#xA;, getMapMode().DPtoLP(150)&#xA;)&#xA;);&#xA;titleBaseLayoutRowBackStageEmployeeAction1.setLayoutManager(new org.eclipse.draw2d.XYLayout());&#xA;&#xA;&#xA;org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel titleBackStageEmployeeAction2 = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;titleBackStageEmployeeAction2.setText(&quot;BACK STAGE\nEMPLOYEE ACTION&quot;);&#xA;&#x9;titleBackStageEmployeeAction2.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;titleBackStageEmployeeAction2.setFont(TITLEBACKSTAGEEMPLOYEEACTION2_FONT);&#xA;&#xA;&#xA;&#xA;titleBaseLayoutRowBackStageEmployeeAction1.add(titleBackStageEmployeeAction2, &#xA;new org.eclipse.draw2d.geometry.Rectangle(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(60)&#xA;, getMapMode().DPtoLP(100)&#xA;, getMapMode().DPtoLP(150)&#xA;)&#xA;);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureCompartmentBaseLayoutRowBackStageEmployeeAction = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;fFigureCompartmentBaseLayoutRowBackStageEmployeeAction.setOutline(false);&#xA;fFigureCompartmentBaseLayoutRowBackStageEmployeeAction.setFill(false);&#xA;fFigureCompartmentBaseLayoutRowBackStageEmployeeAction.setOpaque(false);&#xA;&#xA;baseLayoutBackStageEmployeeAction0.add(fFigureCompartmentBaseLayoutRowBackStageEmployeeAction, &#xA;new org.eclipse.draw2d.geometry.Rectangle(getMapMode().DPtoLP(100)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(900)&#xA;, getMapMode().DPtoLP(150)&#xA;)&#xA;);&#xA;fFigureCompartmentBaseLayoutRowBackStageEmployeeAction.setLayoutManager(new org.eclipse.draw2d.StackLayout());&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure baseLayoutLineOfInternalInteraction0 = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;baseLayoutLineOfInternalInteraction0.setLineWidth(0);&#xA;&#xA;this.add(baseLayoutLineOfInternalInteraction0, &#xA;new org.eclipse.draw2d.geometry.Rectangle(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(640)&#xA;, getMapMode().DPtoLP(1000)&#xA;, getMapMode().DPtoLP(20)&#xA;)&#xA;);&#xA;baseLayoutLineOfInternalInteraction0.setLayoutManager(new org.eclipse.draw2d.XYLayout());&#xA;&#xA;&#xA;org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel titleLineOfInternalInteraction1 = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;titleLineOfInternalInteraction1.setText(&quot;LINE OF INTERNAL INTERACTION&quot;);&#xA;&#x9;titleLineOfInternalInteraction1.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;baseLayoutLineOfInternalInteraction0.add(titleLineOfInternalInteraction1, &#xA;new org.eclipse.draw2d.geometry.Rectangle(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(200)&#xA;, getMapMode().DPtoLP(20)&#xA;)&#xA;);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.PolylineShape lineOfInternalInteraction1 = new org.eclipse.draw2d.PolylineShape();&#xA;&#xA;lineOfInternalInteraction1.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(9)&#xA;));&#xA;lineOfInternalInteraction1.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(800)&#xA;, getMapMode().DPtoLP(9)&#xA;));&#xA;&#x9;lineOfInternalInteraction1.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;baseLayoutLineOfInternalInteraction0.add(lineOfInternalInteraction1, &#xA;new org.eclipse.draw2d.geometry.Rectangle(getMapMode().DPtoLP(200)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(900)&#xA;, getMapMode().DPtoLP(20)&#xA;)&#xA;);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure baseLayoutSupportProcess0 = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;baseLayoutSupportProcess0.setLineWidth(0);&#xA;&#xA;this.add(baseLayoutSupportProcess0, &#xA;new org.eclipse.draw2d.geometry.Rectangle(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(660)&#xA;, getMapMode().DPtoLP(1000)&#xA;, getMapMode().DPtoLP(150)&#xA;)&#xA;);&#xA;baseLayoutSupportProcess0.setLayoutManager(new org.eclipse.draw2d.XYLayout());&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure titleBaseLayoutRowSupportProcess1 = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;titleBaseLayoutRowSupportProcess1.setOutline(false);&#xA;titleBaseLayoutRowSupportProcess1.setFill(false);&#xA;titleBaseLayoutRowSupportProcess1.setOpaque(false);&#xA;&#xA;baseLayoutSupportProcess0.add(titleBaseLayoutRowSupportProcess1, &#xA;new org.eclipse.draw2d.geometry.Rectangle(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(100)&#xA;, getMapMode().DPtoLP(150)&#xA;)&#xA;);&#xA;titleBaseLayoutRowSupportProcess1.setLayoutManager(new org.eclipse.draw2d.XYLayout());&#xA;&#xA;&#xA;org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel titleSupportProcess2 = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;&#xA;titleSupportProcess2.setText(&quot;SUPPORT\nPROCCESS&quot;);&#xA;&#x9;titleSupportProcess2.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;titleSupportProcess2.setFont(TITLESUPPORTPROCESS2_FONT);&#xA;&#xA;&#xA;&#xA;titleBaseLayoutRowSupportProcess1.add(titleSupportProcess2, &#xA;new org.eclipse.draw2d.geometry.Rectangle(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(60)&#xA;, getMapMode().DPtoLP(100)&#xA;, getMapMode().DPtoLP(150)&#xA;)&#xA;);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureCompartmentBaseLayoutRowSupportProcess = new org.eclipse.draw2d.RectangleFigure();&#xA;&#xA;fFigureCompartmentBaseLayoutRowSupportProcess.setOutline(false);&#xA;fFigureCompartmentBaseLayoutRowSupportProcess.setFill(false);&#xA;fFigureCompartmentBaseLayoutRowSupportProcess.setOpaque(false);&#xA;&#xA;baseLayoutSupportProcess0.add(fFigureCompartmentBaseLayoutRowSupportProcess, &#xA;new org.eclipse.draw2d.geometry.Rectangle(getMapMode().DPtoLP(100)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(900)&#xA;, getMapMode().DPtoLP(150)&#xA;)&#xA;);&#xA;fFigureCompartmentBaseLayoutRowSupportProcess.setLayoutManager(new org.eclipse.draw2d.StackLayout());&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.draw2d.RectangleFigure getFigureCompartmentBaseLayoutRowPhysicalEvidence() {&#xA;&#x9;&#x9;return fFigureCompartmentBaseLayoutRowPhysicalEvidence;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.draw2d.RectangleFigure getFigureCompartmentBaseLayoutRowCustomerAction() {&#xA;&#x9;&#x9;return fFigureCompartmentBaseLayoutRowCustomerAction;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.draw2d.RectangleFigure getFigureCompartmentBaseLayoutRowOnStageEmployeeAction() {&#xA;&#x9;&#x9;return fFigureCompartmentBaseLayoutRowOnStageEmployeeAction;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.draw2d.RectangleFigure getFigureCompartmentBaseLayoutRowBackStageEmployeeAction() {&#xA;&#x9;&#x9;return fFigureCompartmentBaseLayoutRowBackStageEmployeeAction;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.draw2d.RectangleFigure getFigureCompartmentBaseLayoutRowSupportProcess() {&#xA;&#x9;&#x9;return fFigureCompartmentBaseLayoutRowSupportProcess;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font TITLEPHYSICALEVIDENCE2_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 9, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font TITLECUSTOMERACTION2_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 9, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font TITLEONSTAGEEMPLOYEEACTION2_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 9, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font TITLEBACKSTAGEEMPLOYEEACTION2_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 9, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font TITLESUPPORTPROCESS2_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 9, org.eclipse.swt.SWT.BOLD);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="serviceblueprint.genmodel#//serviceblueprint/ServiceBlueprintDiagram"/>
        <containmentMetaFeature
            href="serviceblueprint.genmodel#//serviceblueprint/ServiceBlueprintModel/hasServiceBlueprintDiagram"/>
        <childMetaFeature
            href="serviceblueprint.genmodel#//serviceblueprint/ServiceBlueprintModel/hasServiceBlueprintDiagram"/>
      </modelFacet>
    </topLevelNodes>
    <links
        visualID="4001"
        editPartClassName="ServiceBlueprintConnectionEditPart"
        itemSemanticEditPolicyClassName="ServiceBlueprintConnectionItemSemanticEditPolicy"
        notationViewFactoryClassName="ServiceBlueprintConnectionViewFactory"
        createCommandClassName="ServiceBlueprintConnectionCreateCommand"
        reorientCommandClassName="ServiceBlueprintConnectionReorientCommand">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Edge"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="ServiceBlueprintConnectionEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="ServiceBlueprintConnectionFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class ServiceBlueprintConnectionFigure extends org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx {&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public ServiceBlueprintConnectionFigure() {&#xA;&#x9;&#x9;this.setFillXOR(true);&#xA;this.setOutlineXOR(true);&#xA;this.setLineWidth(3);&#xA;this.setLineStyle(org.eclipse.draw2d.Graphics.LINE_DASH);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;this.setBackgroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;&#x9;&#x9;setTargetDecoration(createTargetDecoration());&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RotatableDecoration createTargetDecoration() {&#xA;&#x9;&#x9;org.eclipse.draw2d.PolygonDecoration df = new org.eclipse.draw2d.PolygonDecoration();&#xA;df.setFill(true);&#xA;&#x9;df.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;df.setBackgroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;org.eclipse.draw2d.geometry.PointList pl = new org.eclipse.draw2d.geometry.PointList();&#xA;pl.addPoint(getMapMode().DPtoLP(-2)&#xA;, getMapMode().DPtoLP(-2)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-2)&#xA;, getMapMode().DPtoLP(2)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-2)&#xA;, getMapMode().DPtoLP(-2)&#xA;);&#xA;df.setTemplate(pl);&#xA;df.setScale(getMapMode().DPtoLP(7)&#xA;, getMapMode().DPtoLP(3)&#xA;);&#xA;&#x9;&#x9;return df;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;}&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"
            fixedBackground="true"/>
      </viewmap>
      <modelFacet
          xsi:type="gmfgen:TypeLinkModelFacet">
        <metaClass
            href="serviceblueprint.genmodel#//serviceblueprint/ServiceBlueprintConnection"/>
        <containmentMetaFeature
            href="serviceblueprint.genmodel#//serviceblueprint/ServiceBlueprintModel/hasServiceBlueprintConnection"/>
        <childMetaFeature
            href="serviceblueprint.genmodel#//serviceblueprint/ServiceBlueprintModel/hasServiceBlueprintConnection"/>
        <sourceMetaFeature
            href="serviceblueprint.genmodel#//serviceblueprint/ServiceBlueprintConnection/sourceServiceBlueprintNode"/>
        <targetMetaFeature
            href="serviceblueprint.genmodel#//serviceblueprint/ServiceBlueprintConnection/targetServiceBlueprintNode"/>
      </modelFacet>
    </links>
    <compartments
        visualID="7001"
        editPartClassName="ServiceBlueprintDiagramPhysicalEvidenceCompartmentDiagramEditPart"
        itemSemanticEditPolicyClassName="ServiceBlueprintDiagramPhysicalEvidenceCompartmentDiagramItemSemanticEditPolicy"
        notationViewFactoryClassName="ServiceBlueprintDiagramPhysicalEvidenceCompartmentDiagramViewFactory"
        canonicalEditPolicyClassName="ServiceBlueprintDiagramPhysicalEvidenceCompartmentDiagramCanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.0"
        title="PhysicalEvidenceCompartmentDiagram"
        canCollapse="false"
        needsTitle="false"
        node="//@diagram/@topLevelNodes.0"
        listLayout="false">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <viewmap
          xsi:type="gmfgen:ParentAssignedViewmap"
          getterName="getFigurePhysicalEvidenceContentFigure"
          figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
    </compartments>
    <compartments
        visualID="7002"
        editPartClassName="ServiceBlueprintDiagramCustomerActionCompartmentDiagramEditPart"
        itemSemanticEditPolicyClassName="ServiceBlueprintDiagramCustomerActionCompartmentDiagramItemSemanticEditPolicy"
        notationViewFactoryClassName="ServiceBlueprintDiagramCustomerActionCompartmentDiagramViewFactory"
        canonicalEditPolicyClassName="ServiceBlueprintDiagramCustomerActionCompartmentDiagramCanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.1"
        title="CustomerActionCompartmentDiagram"
        canCollapse="false"
        needsTitle="false"
        node="//@diagram/@topLevelNodes.0"
        listLayout="false">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <viewmap
          xsi:type="gmfgen:ParentAssignedViewmap"
          getterName="getFigureCustomerActionContentFigure"
          figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
    </compartments>
    <compartments
        visualID="7003"
        editPartClassName="ServiceBlueprintDiagramOnStageEmployeeActionCompartmentDiagramEditPart"
        itemSemanticEditPolicyClassName="ServiceBlueprintDiagramOnStageEmployeeActionCompartmentDiagramItemSemanticEditPolicy"
        notationViewFactoryClassName="ServiceBlueprintDiagramOnStageEmployeeActionCompartmentDiagramViewFactory"
        canonicalEditPolicyClassName="ServiceBlueprintDiagramOnStageEmployeeActionCompartmentDiagramCanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.2"
        title="OnStageEmployeeActionCompartmentDiagram"
        canCollapse="false"
        needsTitle="false"
        node="//@diagram/@topLevelNodes.0"
        listLayout="false">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <viewmap
          xsi:type="gmfgen:ParentAssignedViewmap"
          getterName="getFigureOnStageEmployeeActionContentFigure"
          figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
    </compartments>
    <compartments
        visualID="7004"
        editPartClassName="ServiceBlueprintDiagramBackStageEmployeeActionCompartmentDiagramEditPart"
        itemSemanticEditPolicyClassName="ServiceBlueprintDiagramBackStageEmployeeActionCompartmentDiagramItemSemanticEditPolicy"
        notationViewFactoryClassName="ServiceBlueprintDiagramBackStageEmployeeActionCompartmentDiagramViewFactory"
        canonicalEditPolicyClassName="ServiceBlueprintDiagramBackStageEmployeeActionCompartmentDiagramCanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.3"
        title="BackStageEmployeeActionCompartmentDiagram"
        canCollapse="false"
        needsTitle="false"
        node="//@diagram/@topLevelNodes.0"
        listLayout="false">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <viewmap
          xsi:type="gmfgen:ParentAssignedViewmap"
          getterName="getFigureBackStageEmployeeActionContentFigure"
          figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
    </compartments>
    <compartments
        visualID="7005"
        editPartClassName="ServiceBlueprintDiagramSupportProccessEmployeeActionCompartmentDiagramEditPart"
        itemSemanticEditPolicyClassName="ServiceBlueprintDiagramSupportProccessEmployeeActionCompartmentDiagramItemSemanticEditPolicy"
        notationViewFactoryClassName="ServiceBlueprintDiagramSupportProccessEmployeeActionCompartmentDiagramViewFactory"
        canonicalEditPolicyClassName="ServiceBlueprintDiagramSupportProccessEmployeeActionCompartmentDiagramCanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.4"
        title="SupportProccessEmployeeActionCompartmentDiagram"
        canCollapse="false"
        needsTitle="false"
        node="//@diagram/@topLevelNodes.0"
        listLayout="false">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <viewmap
          xsi:type="gmfgen:ParentAssignedViewmap"
          getterName="getFigureSupportProcessContentFigure"
          figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
    </compartments>
    <palette>
      <groups
          title="serviceblueprint">
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="ServiceBlueprintDiagram"
            description="Create new ServiceBlueprintDiagram"
            genNodes="//@diagram/@topLevelNodes.0"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="PhysicalEvidence"
            description="Create new PhysicalEvidence"
            genNodes="//@diagram/@childNodes.0"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="CustomerAction"
            description="Create new CustomerAction"
            genNodes="//@diagram/@childNodes.1"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="OnStageEmployeeAction"
            description="Create new OnStageEmployeeAction"
            genNodes="//@diagram/@childNodes.2"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="BackStageEmployeeAction"
            description="Create new BackStageEmployeeAction"
            genNodes="//@diagram/@childNodes.3"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="SupportProcess"
            description="Create new SupportProcess"
            genNodes="//@diagram/@childNodes.4"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="ServiceBlueprintConnection"
            description="Create new Service Blueprint Connection"
            genLinks="//@diagram/@links.0"/>
      </groups>
    </palette>
    <preferencePages
        xsi:type="gmfgen:GenStandardPreferencePage"
        iD="es.kybele.elastic.models.serviceblueprint.diagram.general"
        name="Serviceblueprint Diagram">
      <children
          xsi:type="gmfgen:GenStandardPreferencePage"
          iD="es.kybele.elastic.models.serviceblueprint.diagram.appearance"
          name="Appearance"
          kind="Appearance"/>
      <children
          xsi:type="gmfgen:GenStandardPreferencePage"
          iD="es.kybele.elastic.models.serviceblueprint.diagram.connections"
          name="Connections"
          kind="Connections"/>
      <children
          xsi:type="gmfgen:GenStandardPreferencePage"
          iD="es.kybele.elastic.models.serviceblueprint.diagram.printing"
          name="Printing"
          kind="Printing"/>
      <children
          xsi:type="gmfgen:GenStandardPreferencePage"
          iD="es.kybele.elastic.models.serviceblueprint.diagram.rulersAndGrid"
          name="Rulers And Grid"
          kind="RulersAndGrid"/>
    </preferencePages>
  </diagram>
  <plugin>
    <requiredPlugins>org.eclipse.gmf.tooling.runtime</requiredPlugins>
    <requiredPlugins>org.eclipse.draw2d</requiredPlugins>
    <requiredPlugins>org.eclipse.gmf.runtime.draw2d.ui</requiredPlugins>
  </plugin>
  <editor/>
  <diagramUpdater/>
  <propertySheet>
    <tabs
        xsi:type="gmfgen:GenStandardPropertyTab"
        iD="appearance"/>
    <tabs
        xsi:type="gmfgen:GenStandardPropertyTab"
        iD="diagram"/>
    <tabs
        xsi:type="gmfgen:GenCustomPropertyTab"
        iD="domain"
        label="Core">
      <filter
          xsi:type="gmfgen:TypeTabFilter">
        <types>org.eclipse.gmf.runtime.notation.View</types>
        <types>org.eclipse.gef.EditPart</types>
        <generatedTypes>abstractNavigatorItem</generatedTypes>
      </filter>
    </tabs>
  </propertySheet>
  <domainGenModel
      href="serviceblueprint.genmodel#/"/>
  <contextMenus
      context="//@diagram">
    <items
        xsi:type="gmfgen:LoadResourceAction"/>
  </contextMenus>
</gmfgen:GenEditorGenerator>
